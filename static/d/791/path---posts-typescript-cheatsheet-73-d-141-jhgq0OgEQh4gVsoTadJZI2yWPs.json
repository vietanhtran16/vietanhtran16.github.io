{"data":{"site":{"siteMetadata":{"title":"Blog by Viet Anh Tran","subtitle":"Passionate about building software.","copyright":"Â© All rights reserved.","author":{"name":"Viet Anh Tran","email":"mail@vietanhtran.tech","github":"vietanhtran16","linkedin":"https://www.linkedin.com/in/viet-anh-tran-ba15a3a4/"},"disqusShortname":"vietanhtranblog","url":"https://vietanhtran16.github.io"}},"markdownRemark":{"id":"14d5421b-bc19-5053-bf5d-73f14e141f0a","html":"<p><strong>keyof</strong></p>\n<ul>\n<li>Queries the set of keys for a given type</li>\n<li>Get union of known public property names</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Todo</span> <span class=\"token punctuation\">{</span>\n\tid<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\ttext<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\tdue<span class=\"token punctuation\">:</span> Date\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> TodoKeys <span class=\"token operator\">=</span> keyof Todo<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"id\" | \"text\" | \"due\"</span></code></pre></div>\n<p><strong>in</strong></p>\n<ul>\n<li>Iterate over all the items in a union of keys</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    age<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> Partial<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">P</span> <span class=\"token keyword\">in</span> keyof <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token constant\">P</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// P will be each key of T</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> PersonPartial <span class=\"token operator\">=</span> Partial<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// same as { name?: string;  age?: number; }</span></code></pre></div>\n<p><strong>PickByValue</strong></p>\n<ul>\n<li>Pick a set of properties from a type which match a certain type such as Function, String, Boolean</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> Props <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> req<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> reqUndef<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> undefined<span class=\"token punctuation\">;</span> opt<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> Props <span class=\"token operator\">=</span> PickByValue<span class=\"token operator\">&lt;</span>Props<span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> undefined<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { req: number; reqUndef: number | undefined }</span></code></pre></div>\n<p><strong>Partial</strong></p>\n<ul>\n<li>Make all properties optional</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> Person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> nickName<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> OptionalPerson <span class=\"token operator\">=</span> Partial<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {name?: string, nickName?: string}</span></code></pre></div>\n<p><strong>Required</strong></p>\n<ul>\n<li>The reverse of the above</li>\n<li>Make all properties required</li>\n</ul>\n<p><strong>Readonly</strong></p>\n<ul>\n<li>Similar to above but make them all readonly</li>\n</ul>\n<p><strong>Pick</strong></p>\n<ul>\n<li>Pick set of properties from a type</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Todo</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    description<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    completed<span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> TodoPreview <span class=\"token operator\">=</span> Pick<span class=\"token operator\">&lt;</span>Todo<span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'completed'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> todo<span class=\"token punctuation\">:</span> TodoPreview <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Clean room'</span><span class=\"token punctuation\">,</span>\n    completed<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Omit</strong></p>\n<ul>\n<li>Remove a set of properties but keep the rest</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Todo</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    description<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    completed<span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> TodoPreview <span class=\"token operator\">=</span> Omit<span class=\"token operator\">&lt;</span>Todo<span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> todo<span class=\"token punctuation\">:</span> TodoPreview <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Clean room'</span><span class=\"token punctuation\">,</span>\n    completed<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Exclude</strong></p>\n<ul>\n<li>Exclude properties from a type</li>\n<li>Used in Omit</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token constant\">T0</span> <span class=\"token operator\">=</span> Exclude<span class=\"token operator\">&lt;</span><span class=\"token string\">\"a\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"b\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"b\" | \"c\"</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T1</span> <span class=\"token operator\">=</span> Exclude<span class=\"token operator\">&lt;</span><span class=\"token string\">\"a\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"b\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"b\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"c\"</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T2</span> <span class=\"token operator\">=</span> Exclude<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Function</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// string | number</span></code></pre></div>\n<p><strong>Extract</strong></p>\n<ul>\n<li>Extract all type that match an union</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token constant\">T0</span> <span class=\"token operator\">=</span> Extract<span class=\"token operator\">&lt;</span><span class=\"token string\">\"a\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"b\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"f\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"a\"</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T1</span> <span class=\"token operator\">=</span> Extract<span class=\"token operator\">&lt;</span><span class=\"token string\">\"a\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"b\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"b\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"a\" | \"b\"</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T2</span> <span class=\"token operator\">=</span> Extract<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Function</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// () => void</span></code></pre></div>\n<p><strong>ReturnType</strong></p>\n<ul>\n<li>Constructs a type consisting of the return type of function</li>\n</ul>\n<p><strong>Intersection</strong></p>\n<ul>\n<li><code class=\"language-text\">&amp;</code></li>\n<li>Combine two different type or interfaces</li>\n</ul>\n<p><strong>Union</strong></p>\n<ul>\n<li>Any value in the union but not a combination of all</li>\n</ul>","fields":{"tagSlugs":["/tags/typescript/"],"slug":"/posts/typescript-cheatsheet/"},"frontmatter":{"title":"Typescript Utility Types Cheatsheet","tags":["typescript"],"date":"2020-09-26T16:51:00.000Z","description":"Recap of some of the most common utility types"}}},"pageContext":{"slug":"/posts/typescript-cheatsheet/"}}